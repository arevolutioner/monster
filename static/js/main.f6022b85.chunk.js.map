{"version":3,"sources":["components/Card.js","components/Cardlist.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","Cardlist","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filterRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAeeA,EAbF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACxB,OACG,sBAAKC,UAAU,8CAAf,UACI,qBAAKC,IAAK,SAASC,IAAG,+BAA0BH,EAA1B,eACtB,gCACI,mCAAMF,EAAN,OACA,kCAAKC,EAAL,cCiBDK,EAtBA,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACb,OACI,8BAGQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,EAAD,CAEAR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCKdC,EAdG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKV,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVW,KAAK,SACLC,YAAY,kBACZC,SAAYH,OCEbI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAU,SAAUC,OAAO,kBAAmBC,OAAO,SAAlE,SACKJ,EAAMK,YCoBJC,E,kDAvBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHC,E,8DAODC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,+BAKzB,OAAIG,KAAKJ,MAAMC,SACJ,2DAEJG,KAAKX,MAAMK,a,GAjBEQ,aCwDbC,G,wDAjDX,aAAc,IAAD,8BACT,gBAeJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAClB,YAAYsB,EAAMC,OAAOC,SAfxC,EAAKX,MAAQ,CACTlB,OAAQ,GACRK,YAAY,IAJP,E,gEASO,IAAD,OACfyB,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAACvB,OAAOkC,S,+BAQnC,IAAD,EAC2BZ,KAAKJ,MAA7BlB,EADH,EACGA,OAAQK,EADX,EACWA,YACV8B,EAAenC,EAAOoC,QAAO,SAAAC,GAC/B,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASlC,EAAYiC,kBAEzD,OAAKtC,EAAOwC,OAIJ,sBAAK5C,UAAW,KAAhB,UACI,oBAAIA,UAAU,KAAd,4BACA,cAAC,EAAD,CAAWU,aAAgBgB,KAAKI,iBAChC,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU1B,OAAQmC,WAR3B,8C,GA3BDX,cCIHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,SAKhDX,M","file":"static/js/main.f6022b85.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n     return (\r\n        <div className='tc bg-light-green dib br3 grow bw2 shadow-5'>\r\n            <img alt= 'robots' src={`https://robohash.org/${id}?set=set2`}/>\r\n            <div>\r\n                <h2> {name} </h2>\r\n                <p> {email} </p>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from '../components/Card'\r\n   \r\nconst Cardlist=({robots}) => {\r\n    return (\r\n        <div>\r\n\r\n            {\r\n                robots.map((user, i) => {\r\n                    return (\r\n                        <Card \r\n                        key={i} \r\n                        id={robots[i].id}\r\n                        name={robots[i].name} \r\n                        email={robots[i].email}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n\r\n}\r\n    \r\n\r\nexport default Cardlist;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n                className='pa3 ba b--green bg-lightest-blue'\r\n                type='search' \r\n                placeholder='search monsters'\r\n                onChange = {searchChange}\r\n            /> \r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\n\r\n\r\nconst Scroll = (props) =>  {\r\n    return (\r\n        <div style={{overflowY:'scroll', border:'5px solid black', height:'500px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;\r\n\r\n","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n    \r\n    componentDidCatch(error, info) {\r\n        this.setState({hasError: true})\r\n\r\n    }\r\n\r\n    render () {\r\n        if (this.state.hasError){\r\n            return <h1>Oooops. That is not good!</h1>\r\n        }\r\n        return this.props.children\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ErrorBoundary","import React, { Component } from 'react';\r\nimport Cardlist from '../components/Cardlist';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll'\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield:''\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => this.setState({robots:users}));\r\n        \r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield:event.target.value})\r\n    }\r\n\r\n    render() {\r\n        const { robots, searchfield } = this.state;\r\n        const filterRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        if (!robots.length){\r\n            return <h1> Loading</h1>\r\n        } else {  \r\n            return (\r\n                <div className= 'tc'>\r\n                    <h1 className='f1'>MonsterFriends</h1>\r\n                    <SearchBox searchChange = {this.onSearchChange} />\r\n                    <Scroll>\r\n                        <ErrorBoundary>\r\n                            <Cardlist robots={filterRobots}/>\r\n                        </ErrorBoundary>\r\n                        \r\n\r\n                    </Scroll>\r\n                    \r\n                </div>\r\n            );\r\n\r\n        }\r\n        \r\n\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}